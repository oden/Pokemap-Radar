// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Request.pb.h"
// @@protoc_insertion_point(imports)

@implementation RequestRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [RequestRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL RequestTypeIsValidValue(RequestType value) {
  switch (value) {
    case RequestTypeMethodUnset:
    case RequestTypePlayerUpdate:
    case RequestTypeGetPlayer:
    case RequestTypeGetInventory:
    case RequestTypeDownloadSettings:
    case RequestTypeDownloadItemTemplates:
    case RequestTypeDownloadRemoteConfigVersion:
    case RequestTypeFortSearch:
    case RequestTypeEncounter:
    case RequestTypeCatchPokemon:
    case RequestTypeFortDetails:
    case RequestTypeItemUse:
    case RequestTypeGetMapObjects:
    case RequestTypeFortDeployPokemon:
    case RequestTypeFortRecallPokemon:
    case RequestTypeReleasePokemon:
    case RequestTypeUseItemPotion:
    case RequestTypeUseItemCapture:
    case RequestTypeUseItemFlee:
    case RequestTypeUseItemRevive:
    case RequestTypeTradeSearch:
    case RequestTypeTradeOffer:
    case RequestTypeTradeResponse:
    case RequestTypeTradeResult:
    case RequestTypeGetPlayerProfile:
    case RequestTypeGetItemPack:
    case RequestTypeBuyItemPack:
    case RequestTypeBuyGemPack:
    case RequestTypeEvolvePokemon:
    case RequestTypeGetHatchedEggs:
    case RequestTypeEncounterTutorialComplete:
    case RequestTypeLevelUpRewards:
    case RequestTypeCheckAwardedBadges:
    case RequestTypeUseItemGym:
    case RequestTypeGetGymDetails:
    case RequestTypeStartGymBattle:
    case RequestTypeAttackGym:
    case RequestTypeRecycleInventoryItem:
    case RequestTypeCollectDailyBonus:
    case RequestTypeUseItemXpBoost:
    case RequestTypeUseItemEggIncubator:
    case RequestTypeUseIncense:
    case RequestTypeGetIncensePokemon:
    case RequestTypeIncenseEncounter:
    case RequestTypeAddFortModifier:
    case RequestTypeDiskEncounter:
    case RequestTypeCollectDailyDefenderBonus:
    case RequestTypeUpgradePokemon:
    case RequestTypeSetFavoritePokemon:
    case RequestTypeNicknamePokemon:
    case RequestTypeEquipBadge:
    case RequestTypeSetContactSettings:
    case RequestTypeGetAssetDigest:
    case RequestTypeGetDownloadUrls:
    case RequestTypeGetSuggestedCodenames:
    case RequestTypeCheckCodenameAvailable:
    case RequestTypeClaimCodename:
    case RequestTypeSetAvatar:
    case RequestTypeSetPlayerTeam:
    case RequestTypeMarkTutorialComplete:
    case RequestTypeLoadSpawnPoints:
    case RequestTypeEcho:
    case RequestTypeDebugUpdateInventory:
    case RequestTypeDebugDeletePlayer:
    case RequestTypeSfidaRegistration:
    case RequestTypeSfidaActionLog:
    case RequestTypeSfidaCertification:
    case RequestTypeSfidaUpdate:
    case RequestTypeSfidaAction:
    case RequestTypeSfidaDowser:
    case RequestTypeSfidaCapture:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromRequestType(RequestType value) {
  switch (value) {
    case RequestTypeMethodUnset:
      return @"RequestTypeMethodUnset";
    case RequestTypePlayerUpdate:
      return @"RequestTypePlayerUpdate";
    case RequestTypeGetPlayer:
      return @"RequestTypeGetPlayer";
    case RequestTypeGetInventory:
      return @"RequestTypeGetInventory";
    case RequestTypeDownloadSettings:
      return @"RequestTypeDownloadSettings";
    case RequestTypeDownloadItemTemplates:
      return @"RequestTypeDownloadItemTemplates";
    case RequestTypeDownloadRemoteConfigVersion:
      return @"RequestTypeDownloadRemoteConfigVersion";
    case RequestTypeFortSearch:
      return @"RequestTypeFortSearch";
    case RequestTypeEncounter:
      return @"RequestTypeEncounter";
    case RequestTypeCatchPokemon:
      return @"RequestTypeCatchPokemon";
    case RequestTypeFortDetails:
      return @"RequestTypeFortDetails";
    case RequestTypeItemUse:
      return @"RequestTypeItemUse";
    case RequestTypeGetMapObjects:
      return @"RequestTypeGetMapObjects";
    case RequestTypeFortDeployPokemon:
      return @"RequestTypeFortDeployPokemon";
    case RequestTypeFortRecallPokemon:
      return @"RequestTypeFortRecallPokemon";
    case RequestTypeReleasePokemon:
      return @"RequestTypeReleasePokemon";
    case RequestTypeUseItemPotion:
      return @"RequestTypeUseItemPotion";
    case RequestTypeUseItemCapture:
      return @"RequestTypeUseItemCapture";
    case RequestTypeUseItemFlee:
      return @"RequestTypeUseItemFlee";
    case RequestTypeUseItemRevive:
      return @"RequestTypeUseItemRevive";
    case RequestTypeTradeSearch:
      return @"RequestTypeTradeSearch";
    case RequestTypeTradeOffer:
      return @"RequestTypeTradeOffer";
    case RequestTypeTradeResponse:
      return @"RequestTypeTradeResponse";
    case RequestTypeTradeResult:
      return @"RequestTypeTradeResult";
    case RequestTypeGetPlayerProfile:
      return @"RequestTypeGetPlayerProfile";
    case RequestTypeGetItemPack:
      return @"RequestTypeGetItemPack";
    case RequestTypeBuyItemPack:
      return @"RequestTypeBuyItemPack";
    case RequestTypeBuyGemPack:
      return @"RequestTypeBuyGemPack";
    case RequestTypeEvolvePokemon:
      return @"RequestTypeEvolvePokemon";
    case RequestTypeGetHatchedEggs:
      return @"RequestTypeGetHatchedEggs";
    case RequestTypeEncounterTutorialComplete:
      return @"RequestTypeEncounterTutorialComplete";
    case RequestTypeLevelUpRewards:
      return @"RequestTypeLevelUpRewards";
    case RequestTypeCheckAwardedBadges:
      return @"RequestTypeCheckAwardedBadges";
    case RequestTypeUseItemGym:
      return @"RequestTypeUseItemGym";
    case RequestTypeGetGymDetails:
      return @"RequestTypeGetGymDetails";
    case RequestTypeStartGymBattle:
      return @"RequestTypeStartGymBattle";
    case RequestTypeAttackGym:
      return @"RequestTypeAttackGym";
    case RequestTypeRecycleInventoryItem:
      return @"RequestTypeRecycleInventoryItem";
    case RequestTypeCollectDailyBonus:
      return @"RequestTypeCollectDailyBonus";
    case RequestTypeUseItemXpBoost:
      return @"RequestTypeUseItemXpBoost";
    case RequestTypeUseItemEggIncubator:
      return @"RequestTypeUseItemEggIncubator";
    case RequestTypeUseIncense:
      return @"RequestTypeUseIncense";
    case RequestTypeGetIncensePokemon:
      return @"RequestTypeGetIncensePokemon";
    case RequestTypeIncenseEncounter:
      return @"RequestTypeIncenseEncounter";
    case RequestTypeAddFortModifier:
      return @"RequestTypeAddFortModifier";
    case RequestTypeDiskEncounter:
      return @"RequestTypeDiskEncounter";
    case RequestTypeCollectDailyDefenderBonus:
      return @"RequestTypeCollectDailyDefenderBonus";
    case RequestTypeUpgradePokemon:
      return @"RequestTypeUpgradePokemon";
    case RequestTypeSetFavoritePokemon:
      return @"RequestTypeSetFavoritePokemon";
    case RequestTypeNicknamePokemon:
      return @"RequestTypeNicknamePokemon";
    case RequestTypeEquipBadge:
      return @"RequestTypeEquipBadge";
    case RequestTypeSetContactSettings:
      return @"RequestTypeSetContactSettings";
    case RequestTypeGetAssetDigest:
      return @"RequestTypeGetAssetDigest";
    case RequestTypeGetDownloadUrls:
      return @"RequestTypeGetDownloadUrls";
    case RequestTypeGetSuggestedCodenames:
      return @"RequestTypeGetSuggestedCodenames";
    case RequestTypeCheckCodenameAvailable:
      return @"RequestTypeCheckCodenameAvailable";
    case RequestTypeClaimCodename:
      return @"RequestTypeClaimCodename";
    case RequestTypeSetAvatar:
      return @"RequestTypeSetAvatar";
    case RequestTypeSetPlayerTeam:
      return @"RequestTypeSetPlayerTeam";
    case RequestTypeMarkTutorialComplete:
      return @"RequestTypeMarkTutorialComplete";
    case RequestTypeLoadSpawnPoints:
      return @"RequestTypeLoadSpawnPoints";
    case RequestTypeEcho:
      return @"RequestTypeEcho";
    case RequestTypeDebugUpdateInventory:
      return @"RequestTypeDebugUpdateInventory";
    case RequestTypeDebugDeletePlayer:
      return @"RequestTypeDebugDeletePlayer";
    case RequestTypeSfidaRegistration:
      return @"RequestTypeSfidaRegistration";
    case RequestTypeSfidaActionLog:
      return @"RequestTypeSfidaActionLog";
    case RequestTypeSfidaCertification:
      return @"RequestTypeSfidaCertification";
    case RequestTypeSfidaUpdate:
      return @"RequestTypeSfidaUpdate";
    case RequestTypeSfidaAction:
      return @"RequestTypeSfidaAction";
    case RequestTypeSfidaDowser:
      return @"RequestTypeSfidaDowser";
    case RequestTypeSfidaCapture:
      return @"RequestTypeSfidaCapture";
    default:
      return nil;
  }
}

@interface RequestEnvelope ()
@property SInt32 statusCode;
@property UInt64 requestId;
@property (strong) NSMutableArray * requestsArray;
@property (strong) RequestEnvelopeUnknown6* unknown6;
@property Float64 latitude;
@property Float64 longitude;
@property Float64 altitude;
@property (strong) AuthInfo* authInfo;
@property (strong) AuthTicket* authTicket;
@property SInt64 unknown12;
@end

@implementation RequestEnvelope

- (BOOL) hasStatusCode {
  return !!hasStatusCode_;
}
- (void) setHasStatusCode:(BOOL) _value_ {
  hasStatusCode_ = !!_value_;
}
@synthesize statusCode;
- (BOOL) hasRequestId {
  return !!hasRequestId_;
}
- (void) setHasRequestId:(BOOL) _value_ {
  hasRequestId_ = !!_value_;
}
@synthesize requestId;
@synthesize requestsArray;
@dynamic requests;
- (BOOL) hasUnknown6 {
  return !!hasUnknown6_;
}
- (void) setHasUnknown6:(BOOL) _value_ {
  hasUnknown6_ = !!_value_;
}
@synthesize unknown6;
- (BOOL) hasLatitude {
  return !!hasLatitude_;
}
- (void) setHasLatitude:(BOOL) _value_ {
  hasLatitude_ = !!_value_;
}
@synthesize latitude;
- (BOOL) hasLongitude {
  return !!hasLongitude_;
}
- (void) setHasLongitude:(BOOL) _value_ {
  hasLongitude_ = !!_value_;
}
@synthesize longitude;
- (BOOL) hasAltitude {
  return !!hasAltitude_;
}
- (void) setHasAltitude:(BOOL) _value_ {
  hasAltitude_ = !!_value_;
}
@synthesize altitude;
- (BOOL) hasAuthInfo {
  return !!hasAuthInfo_;
}
- (void) setHasAuthInfo:(BOOL) _value_ {
  hasAuthInfo_ = !!_value_;
}
@synthesize authInfo;
- (BOOL) hasAuthTicket {
  return !!hasAuthTicket_;
}
- (void) setHasAuthTicket:(BOOL) _value_ {
  hasAuthTicket_ = !!_value_;
}
@synthesize authTicket;
- (BOOL) hasUnknown12 {
  return !!hasUnknown12_;
}
- (void) setHasUnknown12:(BOOL) _value_ {
  hasUnknown12_ = !!_value_;
}
@synthesize unknown12;
- (instancetype) init {
  if ((self = [super init])) {
    self.statusCode = 0;
    self.requestId = 0L;
    self.unknown6 = [RequestEnvelopeUnknown6 defaultInstance];
    self.latitude = 0;
    self.longitude = 0;
    self.altitude = 0;
    self.authInfo = [AuthInfo defaultInstance];
    self.authTicket = [AuthTicket defaultInstance];
    self.unknown12 = 0L;
  }
  return self;
}
static RequestEnvelope* defaultRequestEnvelopeInstance = nil;
+ (void) initialize {
  if (self == [RequestEnvelope class]) {
    defaultRequestEnvelopeInstance = [[RequestEnvelope alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultRequestEnvelopeInstance;
}
- (instancetype) defaultInstance {
  return defaultRequestEnvelopeInstance;
}
- (NSArray *)requests {
  return requestsArray;
}
- (Request*)requestsAtIndex:(NSUInteger)index {
  return [requestsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasStatusCode) {
    return NO;
  }
  __block BOOL isInitrequests = YES;
   [self.requests enumerateObjectsUsingBlock:^(Request *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitrequests = NO;
      *stop = YES;
    }
  }];
  if (!isInitrequests) return isInitrequests;
  if (self.hasUnknown6) {
    if (!self.unknown6.isInitialized) {
      return NO;
    }
  }
  if (self.hasAuthInfo) {
    if (!self.authInfo.isInitialized) {
      return NO;
    }
  }
  if (self.hasAuthTicket) {
    if (!self.authTicket.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStatusCode) {
    [output writeInt32:1 value:self.statusCode];
  }
  if (self.hasRequestId) {
    [output writeUInt64:3 value:self.requestId];
  }
  [self.requestsArray enumerateObjectsUsingBlock:^(Request *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:4 value:element];
  }];
  if (self.hasUnknown6) {
    [output writeMessage:6 value:self.unknown6];
  }
  if (self.hasLatitude) {
    [output writeDouble:7 value:self.latitude];
  }
  if (self.hasLongitude) {
    [output writeDouble:8 value:self.longitude];
  }
  if (self.hasAltitude) {
    [output writeDouble:9 value:self.altitude];
  }
  if (self.hasAuthInfo) {
    [output writeMessage:10 value:self.authInfo];
  }
  if (self.hasAuthTicket) {
    [output writeMessage:11 value:self.authTicket];
  }
  if (self.hasUnknown12) {
    [output writeInt64:12 value:self.unknown12];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStatusCode) {
    size_ += computeInt32Size(1, self.statusCode);
  }
  if (self.hasRequestId) {
    size_ += computeUInt64Size(3, self.requestId);
  }
  [self.requestsArray enumerateObjectsUsingBlock:^(Request *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(4, element);
  }];
  if (self.hasUnknown6) {
    size_ += computeMessageSize(6, self.unknown6);
  }
  if (self.hasLatitude) {
    size_ += computeDoubleSize(7, self.latitude);
  }
  if (self.hasLongitude) {
    size_ += computeDoubleSize(8, self.longitude);
  }
  if (self.hasAltitude) {
    size_ += computeDoubleSize(9, self.altitude);
  }
  if (self.hasAuthInfo) {
    size_ += computeMessageSize(10, self.authInfo);
  }
  if (self.hasAuthTicket) {
    size_ += computeMessageSize(11, self.authTicket);
  }
  if (self.hasUnknown12) {
    size_ += computeInt64Size(12, self.unknown12);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RequestEnvelope*) parseFromData:(NSData*) data {
  return (RequestEnvelope*)[[[RequestEnvelope builder] mergeFromData:data] build];
}
+ (RequestEnvelope*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestEnvelope*)[[[RequestEnvelope builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RequestEnvelope*) parseFromInputStream:(NSInputStream*) input {
  return (RequestEnvelope*)[[[RequestEnvelope builder] mergeFromInputStream:input] build];
}
+ (RequestEnvelope*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestEnvelope*)[[[RequestEnvelope builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RequestEnvelope*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RequestEnvelope*)[[[RequestEnvelope builder] mergeFromCodedInputStream:input] build];
}
+ (RequestEnvelope*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestEnvelope*)[[[RequestEnvelope builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RequestEnvelopeBuilder*) builder {
  return [[RequestEnvelopeBuilder alloc] init];
}
+ (RequestEnvelopeBuilder*) builderWithPrototype:(RequestEnvelope*) prototype {
  return [[RequestEnvelope builder] mergeFrom:prototype];
}
- (RequestEnvelopeBuilder*) builder {
  return [RequestEnvelope builder];
}
- (RequestEnvelopeBuilder*) toBuilder {
  return [RequestEnvelope builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStatusCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"statusCode", [NSNumber numberWithInteger:self.statusCode]];
  }
  if (self.hasRequestId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"requestId", [NSNumber numberWithLongLong:self.requestId]];
  }
  [self.requestsArray enumerateObjectsUsingBlock:^(Request *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"requests"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasUnknown6) {
    [output appendFormat:@"%@%@ {\n", indent, @"unknown6"];
    [self.unknown6 writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasLatitude) {
    [output appendFormat:@"%@%@: %@\n", indent, @"latitude", [NSNumber numberWithDouble:self.latitude]];
  }
  if (self.hasLongitude) {
    [output appendFormat:@"%@%@: %@\n", indent, @"longitude", [NSNumber numberWithDouble:self.longitude]];
  }
  if (self.hasAltitude) {
    [output appendFormat:@"%@%@: %@\n", indent, @"altitude", [NSNumber numberWithDouble:self.altitude]];
  }
  if (self.hasAuthInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"authInfo"];
    [self.authInfo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasAuthTicket) {
    [output appendFormat:@"%@%@ {\n", indent, @"authTicket"];
    [self.authTicket writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasUnknown12) {
    [output appendFormat:@"%@%@: %@\n", indent, @"unknown12", [NSNumber numberWithLongLong:self.unknown12]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasStatusCode) {
    [dictionary setObject: [NSNumber numberWithInteger:self.statusCode] forKey: @"statusCode"];
  }
  if (self.hasRequestId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.requestId] forKey: @"requestId"];
  }
  for (Request* element in self.requestsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"requests"];
  }
  if (self.hasUnknown6) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.unknown6 storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"unknown6"];
  }
  if (self.hasLatitude) {
    [dictionary setObject: [NSNumber numberWithDouble:self.latitude] forKey: @"latitude"];
  }
  if (self.hasLongitude) {
    [dictionary setObject: [NSNumber numberWithDouble:self.longitude] forKey: @"longitude"];
  }
  if (self.hasAltitude) {
    [dictionary setObject: [NSNumber numberWithDouble:self.altitude] forKey: @"altitude"];
  }
  if (self.hasAuthInfo) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.authInfo storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"authInfo"];
  }
  if (self.hasAuthTicket) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.authTicket storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"authTicket"];
  }
  if (self.hasUnknown12) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.unknown12] forKey: @"unknown12"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RequestEnvelope class]]) {
    return NO;
  }
  RequestEnvelope *otherMessage = other;
  return
      self.hasStatusCode == otherMessage.hasStatusCode &&
      (!self.hasStatusCode || self.statusCode == otherMessage.statusCode) &&
      self.hasRequestId == otherMessage.hasRequestId &&
      (!self.hasRequestId || self.requestId == otherMessage.requestId) &&
      [self.requestsArray isEqualToArray:otherMessage.requestsArray] &&
      self.hasUnknown6 == otherMessage.hasUnknown6 &&
      (!self.hasUnknown6 || [self.unknown6 isEqual:otherMessage.unknown6]) &&
      self.hasLatitude == otherMessage.hasLatitude &&
      (!self.hasLatitude || self.latitude == otherMessage.latitude) &&
      self.hasLongitude == otherMessage.hasLongitude &&
      (!self.hasLongitude || self.longitude == otherMessage.longitude) &&
      self.hasAltitude == otherMessage.hasAltitude &&
      (!self.hasAltitude || self.altitude == otherMessage.altitude) &&
      self.hasAuthInfo == otherMessage.hasAuthInfo &&
      (!self.hasAuthInfo || [self.authInfo isEqual:otherMessage.authInfo]) &&
      self.hasAuthTicket == otherMessage.hasAuthTicket &&
      (!self.hasAuthTicket || [self.authTicket isEqual:otherMessage.authTicket]) &&
      self.hasUnknown12 == otherMessage.hasUnknown12 &&
      (!self.hasUnknown12 || self.unknown12 == otherMessage.unknown12) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStatusCode) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.statusCode] hash];
  }
  if (self.hasRequestId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.requestId] hash];
  }
  [self.requestsArray enumerateObjectsUsingBlock:^(Request *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasUnknown6) {
    hashCode = hashCode * 31 + [self.unknown6 hash];
  }
  if (self.hasLatitude) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.latitude] hash];
  }
  if (self.hasLongitude) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.longitude] hash];
  }
  if (self.hasAltitude) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.altitude] hash];
  }
  if (self.hasAuthInfo) {
    hashCode = hashCode * 31 + [self.authInfo hash];
  }
  if (self.hasAuthTicket) {
    hashCode = hashCode * 31 + [self.authTicket hash];
  }
  if (self.hasUnknown12) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.unknown12] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface RequestEnvelopeBuilder()
@property (strong) RequestEnvelope* resultRequestEnvelope;
@end

@implementation RequestEnvelopeBuilder
@synthesize resultRequestEnvelope;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultRequestEnvelope = [[RequestEnvelope alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultRequestEnvelope;
}
- (RequestEnvelopeBuilder*) clear {
  self.resultRequestEnvelope = [[RequestEnvelope alloc] init];
  return self;
}
- (RequestEnvelopeBuilder*) clone {
  return [RequestEnvelope builderWithPrototype:resultRequestEnvelope];
}
- (RequestEnvelope*) defaultInstance {
  return [RequestEnvelope defaultInstance];
}
- (RequestEnvelope*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RequestEnvelope*) buildPartial {
  RequestEnvelope* returnMe = resultRequestEnvelope;
  self.resultRequestEnvelope = nil;
  return returnMe;
}
- (RequestEnvelopeBuilder*) mergeFrom:(RequestEnvelope*) other {
  if (other == [RequestEnvelope defaultInstance]) {
    return self;
  }
  if (other.hasStatusCode) {
    [self setStatusCode:other.statusCode];
  }
  if (other.hasRequestId) {
    [self setRequestId:other.requestId];
  }
  if (other.requestsArray.count > 0) {
    if (resultRequestEnvelope.requestsArray == nil) {
      resultRequestEnvelope.requestsArray = [[NSMutableArray alloc] initWithArray:other.requestsArray];
    } else {
      [resultRequestEnvelope.requestsArray addObjectsFromArray:other.requestsArray];
    }
  }
  if (other.hasUnknown6) {
    [self mergeUnknown6:other.unknown6];
  }
  if (other.hasLatitude) {
    [self setLatitude:other.latitude];
  }
  if (other.hasLongitude) {
    [self setLongitude:other.longitude];
  }
  if (other.hasAltitude) {
    [self setAltitude:other.altitude];
  }
  if (other.hasAuthInfo) {
    [self mergeAuthInfo:other.authInfo];
  }
  if (other.hasAuthTicket) {
    [self mergeAuthTicket:other.authTicket];
  }
  if (other.hasUnknown12) {
    [self setUnknown12:other.unknown12];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RequestEnvelopeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RequestEnvelopeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setStatusCode:[input readInt32]];
        break;
      }
      case 24: {
        [self setRequestId:[input readUInt64]];
        break;
      }
      case 34: {
        RequestBuilder* subBuilder = [Request builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRequests:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        RequestEnvelopeUnknown6Builder* subBuilder = [RequestEnvelopeUnknown6 builder];
        if (self.hasUnknown6) {
          [subBuilder mergeFrom:self.unknown6];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUnknown6:[subBuilder buildPartial]];
        break;
      }
      case 57: {
        [self setLatitude:[input readDouble]];
        break;
      }
      case 65: {
        [self setLongitude:[input readDouble]];
        break;
      }
      case 73: {
        [self setAltitude:[input readDouble]];
        break;
      }
      case 82: {
        AuthInfoBuilder* subBuilder = [AuthInfo builder];
        if (self.hasAuthInfo) {
          [subBuilder mergeFrom:self.authInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAuthInfo:[subBuilder buildPartial]];
        break;
      }
      case 90: {
        AuthTicketBuilder* subBuilder = [AuthTicket builder];
        if (self.hasAuthTicket) {
          [subBuilder mergeFrom:self.authTicket];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAuthTicket:[subBuilder buildPartial]];
        break;
      }
      case 96: {
        [self setUnknown12:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasStatusCode {
  return resultRequestEnvelope.hasStatusCode;
}
- (SInt32) statusCode {
  return resultRequestEnvelope.statusCode;
}
- (RequestEnvelopeBuilder*) setStatusCode:(SInt32) value {
  resultRequestEnvelope.hasStatusCode = YES;
  resultRequestEnvelope.statusCode = value;
  return self;
}
- (RequestEnvelopeBuilder*) clearStatusCode {
  resultRequestEnvelope.hasStatusCode = NO;
  resultRequestEnvelope.statusCode = 0;
  return self;
}
- (BOOL) hasRequestId {
  return resultRequestEnvelope.hasRequestId;
}
- (UInt64) requestId {
  return resultRequestEnvelope.requestId;
}
- (RequestEnvelopeBuilder*) setRequestId:(UInt64) value {
  resultRequestEnvelope.hasRequestId = YES;
  resultRequestEnvelope.requestId = value;
  return self;
}
- (RequestEnvelopeBuilder*) clearRequestId {
  resultRequestEnvelope.hasRequestId = NO;
  resultRequestEnvelope.requestId = 0L;
  return self;
}
- (NSMutableArray *)requests {
  return resultRequestEnvelope.requestsArray;
}
- (Request*)requestsAtIndex:(NSUInteger)index {
  return [resultRequestEnvelope requestsAtIndex:index];
}
- (RequestEnvelopeBuilder *)addRequests:(Request*)value {
  if (resultRequestEnvelope.requestsArray == nil) {
    resultRequestEnvelope.requestsArray = [[NSMutableArray alloc]init];
  }
  [resultRequestEnvelope.requestsArray addObject:value];
  return self;
}
- (RequestEnvelopeBuilder *)setRequestsArray:(NSArray *)array {
  resultRequestEnvelope.requestsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (RequestEnvelopeBuilder *)clearRequests {
  resultRequestEnvelope.requestsArray = nil;
  return self;
}
- (BOOL) hasUnknown6 {
  return resultRequestEnvelope.hasUnknown6;
}
- (RequestEnvelopeUnknown6*) unknown6 {
  return resultRequestEnvelope.unknown6;
}
- (RequestEnvelopeBuilder*) setUnknown6:(RequestEnvelopeUnknown6*) value {
  resultRequestEnvelope.hasUnknown6 = YES;
  resultRequestEnvelope.unknown6 = value;
  return self;
}
- (RequestEnvelopeBuilder*) setUnknown6Builder:(RequestEnvelopeUnknown6Builder*) builderForValue {
  return [self setUnknown6:[builderForValue build]];
}
- (RequestEnvelopeBuilder*) mergeUnknown6:(RequestEnvelopeUnknown6*) value {
  if (resultRequestEnvelope.hasUnknown6 &&
      resultRequestEnvelope.unknown6 != [RequestEnvelopeUnknown6 defaultInstance]) {
    resultRequestEnvelope.unknown6 =
      [[[RequestEnvelopeUnknown6 builderWithPrototype:resultRequestEnvelope.unknown6] mergeFrom:value] buildPartial];
  } else {
    resultRequestEnvelope.unknown6 = value;
  }
  resultRequestEnvelope.hasUnknown6 = YES;
  return self;
}
- (RequestEnvelopeBuilder*) clearUnknown6 {
  resultRequestEnvelope.hasUnknown6 = NO;
  resultRequestEnvelope.unknown6 = [RequestEnvelopeUnknown6 defaultInstance];
  return self;
}
- (BOOL) hasLatitude {
  return resultRequestEnvelope.hasLatitude;
}
- (Float64) latitude {
  return resultRequestEnvelope.latitude;
}
- (RequestEnvelopeBuilder*) setLatitude:(Float64) value {
  resultRequestEnvelope.hasLatitude = YES;
  resultRequestEnvelope.latitude = value;
  return self;
}
- (RequestEnvelopeBuilder*) clearLatitude {
  resultRequestEnvelope.hasLatitude = NO;
  resultRequestEnvelope.latitude = 0;
  return self;
}
- (BOOL) hasLongitude {
  return resultRequestEnvelope.hasLongitude;
}
- (Float64) longitude {
  return resultRequestEnvelope.longitude;
}
- (RequestEnvelopeBuilder*) setLongitude:(Float64) value {
  resultRequestEnvelope.hasLongitude = YES;
  resultRequestEnvelope.longitude = value;
  return self;
}
- (RequestEnvelopeBuilder*) clearLongitude {
  resultRequestEnvelope.hasLongitude = NO;
  resultRequestEnvelope.longitude = 0;
  return self;
}
- (BOOL) hasAltitude {
  return resultRequestEnvelope.hasAltitude;
}
- (Float64) altitude {
  return resultRequestEnvelope.altitude;
}
- (RequestEnvelopeBuilder*) setAltitude:(Float64) value {
  resultRequestEnvelope.hasAltitude = YES;
  resultRequestEnvelope.altitude = value;
  return self;
}
- (RequestEnvelopeBuilder*) clearAltitude {
  resultRequestEnvelope.hasAltitude = NO;
  resultRequestEnvelope.altitude = 0;
  return self;
}
- (BOOL) hasAuthInfo {
  return resultRequestEnvelope.hasAuthInfo;
}
- (AuthInfo*) authInfo {
  return resultRequestEnvelope.authInfo;
}
- (RequestEnvelopeBuilder*) setAuthInfo:(AuthInfo*) value {
  resultRequestEnvelope.hasAuthInfo = YES;
  resultRequestEnvelope.authInfo = value;
  return self;
}
- (RequestEnvelopeBuilder*) setAuthInfoBuilder:(AuthInfoBuilder*) builderForValue {
  return [self setAuthInfo:[builderForValue build]];
}
- (RequestEnvelopeBuilder*) mergeAuthInfo:(AuthInfo*) value {
  if (resultRequestEnvelope.hasAuthInfo &&
      resultRequestEnvelope.authInfo != [AuthInfo defaultInstance]) {
    resultRequestEnvelope.authInfo =
      [[[AuthInfo builderWithPrototype:resultRequestEnvelope.authInfo] mergeFrom:value] buildPartial];
  } else {
    resultRequestEnvelope.authInfo = value;
  }
  resultRequestEnvelope.hasAuthInfo = YES;
  return self;
}
- (RequestEnvelopeBuilder*) clearAuthInfo {
  resultRequestEnvelope.hasAuthInfo = NO;
  resultRequestEnvelope.authInfo = [AuthInfo defaultInstance];
  return self;
}
- (BOOL) hasAuthTicket {
  return resultRequestEnvelope.hasAuthTicket;
}
- (AuthTicket*) authTicket {
  return resultRequestEnvelope.authTicket;
}
- (RequestEnvelopeBuilder*) setAuthTicket:(AuthTicket*) value {
  resultRequestEnvelope.hasAuthTicket = YES;
  resultRequestEnvelope.authTicket = value;
  return self;
}
- (RequestEnvelopeBuilder*) setAuthTicketBuilder:(AuthTicketBuilder*) builderForValue {
  return [self setAuthTicket:[builderForValue build]];
}
- (RequestEnvelopeBuilder*) mergeAuthTicket:(AuthTicket*) value {
  if (resultRequestEnvelope.hasAuthTicket &&
      resultRequestEnvelope.authTicket != [AuthTicket defaultInstance]) {
    resultRequestEnvelope.authTicket =
      [[[AuthTicket builderWithPrototype:resultRequestEnvelope.authTicket] mergeFrom:value] buildPartial];
  } else {
    resultRequestEnvelope.authTicket = value;
  }
  resultRequestEnvelope.hasAuthTicket = YES;
  return self;
}
- (RequestEnvelopeBuilder*) clearAuthTicket {
  resultRequestEnvelope.hasAuthTicket = NO;
  resultRequestEnvelope.authTicket = [AuthTicket defaultInstance];
  return self;
}
- (BOOL) hasUnknown12 {
  return resultRequestEnvelope.hasUnknown12;
}
- (SInt64) unknown12 {
  return resultRequestEnvelope.unknown12;
}
- (RequestEnvelopeBuilder*) setUnknown12:(SInt64) value {
  resultRequestEnvelope.hasUnknown12 = YES;
  resultRequestEnvelope.unknown12 = value;
  return self;
}
- (RequestEnvelopeBuilder*) clearUnknown12 {
  resultRequestEnvelope.hasUnknown12 = NO;
  resultRequestEnvelope.unknown12 = 0L;
  return self;
}
@end

@interface Request ()
@property RequestType requestType;
@property (strong) NSData* requestMessage;
@end

@implementation Request

- (BOOL) hasRequestType {
  return !!hasRequestType_;
}
- (void) setHasRequestType:(BOOL) _value_ {
  hasRequestType_ = !!_value_;
}
@synthesize requestType;
- (BOOL) hasRequestMessage {
  return !!hasRequestMessage_;
}
- (void) setHasRequestMessage:(BOOL) _value_ {
  hasRequestMessage_ = !!_value_;
}
@synthesize requestMessage;
- (instancetype) init {
  if ((self = [super init])) {
    self.requestType = RequestTypeMethodUnset;
    self.requestMessage = [NSData data];
  }
  return self;
}
static Request* defaultRequestInstance = nil;
+ (void) initialize {
  if (self == [Request class]) {
    defaultRequestInstance = [[Request alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasRequestType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRequestType) {
    [output writeEnum:1 value:self.requestType];
  }
  if (self.hasRequestMessage) {
    [output writeData:2 value:self.requestMessage];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasRequestType) {
    size_ += computeEnumSize(1, self.requestType);
  }
  if (self.hasRequestMessage) {
    size_ += computeDataSize(2, self.requestMessage);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (Request*) parseFromData:(NSData*) data {
  return (Request*)[[[Request builder] mergeFromData:data] build];
}
+ (Request*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Request*)[[[Request builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Request*) parseFromInputStream:(NSInputStream*) input {
  return (Request*)[[[Request builder] mergeFromInputStream:input] build];
}
+ (Request*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Request*)[[[Request builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Request*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Request*)[[[Request builder] mergeFromCodedInputStream:input] build];
}
+ (Request*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Request*)[[[Request builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RequestBuilder*) builder {
  return [[RequestBuilder alloc] init];
}
+ (RequestBuilder*) builderWithPrototype:(Request*) prototype {
  return [[Request builder] mergeFrom:prototype];
}
- (RequestBuilder*) builder {
  return [Request builder];
}
- (RequestBuilder*) toBuilder {
  return [Request builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasRequestType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"requestType", NSStringFromRequestType(self.requestType)];
  }
  if (self.hasRequestMessage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"requestMessage", self.requestMessage];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasRequestType) {
    [dictionary setObject: @(self.requestType) forKey: @"requestType"];
  }
  if (self.hasRequestMessage) {
    [dictionary setObject: self.requestMessage forKey: @"requestMessage"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[Request class]]) {
    return NO;
  }
  Request *otherMessage = other;
  return
      self.hasRequestType == otherMessage.hasRequestType &&
      (!self.hasRequestType || self.requestType == otherMessage.requestType) &&
      self.hasRequestMessage == otherMessage.hasRequestMessage &&
      (!self.hasRequestMessage || [self.requestMessage isEqual:otherMessage.requestMessage]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasRequestType) {
    hashCode = hashCode * 31 + self.requestType;
  }
  if (self.hasRequestMessage) {
    hashCode = hashCode * 31 + [self.requestMessage hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface RequestBuilder()
@property (strong) Request* resultRequest;
@end

@implementation RequestBuilder
@synthesize resultRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultRequest = [[Request alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultRequest;
}
- (RequestBuilder*) clear {
  self.resultRequest = [[Request alloc] init];
  return self;
}
- (RequestBuilder*) clone {
  return [Request builderWithPrototype:resultRequest];
}
- (Request*) defaultInstance {
  return [Request defaultInstance];
}
- (Request*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Request*) buildPartial {
  Request* returnMe = resultRequest;
  self.resultRequest = nil;
  return returnMe;
}
- (RequestBuilder*) mergeFrom:(Request*) other {
  if (other == [Request defaultInstance]) {
    return self;
  }
  if (other.hasRequestType) {
    [self setRequestType:other.requestType];
  }
  if (other.hasRequestMessage) {
    [self setRequestMessage:other.requestMessage];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        RequestType value = (RequestType)[input readEnum];
        if (RequestTypeIsValidValue(value)) {
          [self setRequestType:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 18: {
        [self setRequestMessage:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasRequestType {
  return resultRequest.hasRequestType;
}
- (RequestType) requestType {
  return resultRequest.requestType;
}
- (RequestBuilder*) setRequestType:(RequestType) value {
  resultRequest.hasRequestType = YES;
  resultRequest.requestType = value;
  return self;
}
- (RequestBuilder*) clearRequestType {
  resultRequest.hasRequestType = NO;
  resultRequest.requestType = RequestTypeMethodUnset;
  return self;
}
- (BOOL) hasRequestMessage {
  return resultRequest.hasRequestMessage;
}
- (NSData*) requestMessage {
  return resultRequest.requestMessage;
}
- (RequestBuilder*) setRequestMessage:(NSData*) value {
  resultRequest.hasRequestMessage = YES;
  resultRequest.requestMessage = value;
  return self;
}
- (RequestBuilder*) clearRequestMessage {
  resultRequest.hasRequestMessage = NO;
  resultRequest.requestMessage = [NSData data];
  return self;
}
@end

@interface AuthInfo ()
@property (strong) NSString* provider;
@property (strong) JWT* token;
@end

@implementation AuthInfo

- (BOOL) hasProvider {
  return !!hasProvider_;
}
- (void) setHasProvider:(BOOL) _value_ {
  hasProvider_ = !!_value_;
}
@synthesize provider;
- (BOOL) hasToken {
  return !!hasToken_;
}
- (void) setHasToken:(BOOL) _value_ {
  hasToken_ = !!_value_;
}
@synthesize token;
- (instancetype) init {
  if ((self = [super init])) {
    self.provider = @"";
    self.token = [JWT defaultInstance];
  }
  return self;
}
static AuthInfo* defaultAuthInfoInstance = nil;
+ (void) initialize {
  if (self == [AuthInfo class]) {
    defaultAuthInfoInstance = [[AuthInfo alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultAuthInfoInstance;
}
- (instancetype) defaultInstance {
  return defaultAuthInfoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasProvider) {
    return NO;
  }
  if (!self.hasToken) {
    return NO;
  }
  if (!self.token.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasProvider) {
    [output writeString:1 value:self.provider];
  }
  if (self.hasToken) {
    [output writeMessage:2 value:self.token];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasProvider) {
    size_ += computeStringSize(1, self.provider);
  }
  if (self.hasToken) {
    size_ += computeMessageSize(2, self.token);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AuthInfo*) parseFromData:(NSData*) data {
  return (AuthInfo*)[[[AuthInfo builder] mergeFromData:data] build];
}
+ (AuthInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AuthInfo*)[[[AuthInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AuthInfo*) parseFromInputStream:(NSInputStream*) input {
  return (AuthInfo*)[[[AuthInfo builder] mergeFromInputStream:input] build];
}
+ (AuthInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AuthInfo*)[[[AuthInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AuthInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AuthInfo*)[[[AuthInfo builder] mergeFromCodedInputStream:input] build];
}
+ (AuthInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AuthInfo*)[[[AuthInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AuthInfoBuilder*) builder {
  return [[AuthInfoBuilder alloc] init];
}
+ (AuthInfoBuilder*) builderWithPrototype:(AuthInfo*) prototype {
  return [[AuthInfo builder] mergeFrom:prototype];
}
- (AuthInfoBuilder*) builder {
  return [AuthInfo builder];
}
- (AuthInfoBuilder*) toBuilder {
  return [AuthInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasProvider) {
    [output appendFormat:@"%@%@: %@\n", indent, @"provider", self.provider];
  }
  if (self.hasToken) {
    [output appendFormat:@"%@%@ {\n", indent, @"token"];
    [self.token writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasProvider) {
    [dictionary setObject: self.provider forKey: @"provider"];
  }
  if (self.hasToken) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.token storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"token"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[AuthInfo class]]) {
    return NO;
  }
  AuthInfo *otherMessage = other;
  return
      self.hasProvider == otherMessage.hasProvider &&
      (!self.hasProvider || [self.provider isEqual:otherMessage.provider]) &&
      self.hasToken == otherMessage.hasToken &&
      (!self.hasToken || [self.token isEqual:otherMessage.token]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasProvider) {
    hashCode = hashCode * 31 + [self.provider hash];
  }
  if (self.hasToken) {
    hashCode = hashCode * 31 + [self.token hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface AuthInfoBuilder()
@property (strong) AuthInfo* resultAuthInfo;
@end

@implementation AuthInfoBuilder
@synthesize resultAuthInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultAuthInfo = [[AuthInfo alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultAuthInfo;
}
- (AuthInfoBuilder*) clear {
  self.resultAuthInfo = [[AuthInfo alloc] init];
  return self;
}
- (AuthInfoBuilder*) clone {
  return [AuthInfo builderWithPrototype:resultAuthInfo];
}
- (AuthInfo*) defaultInstance {
  return [AuthInfo defaultInstance];
}
- (AuthInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AuthInfo*) buildPartial {
  AuthInfo* returnMe = resultAuthInfo;
  self.resultAuthInfo = nil;
  return returnMe;
}
- (AuthInfoBuilder*) mergeFrom:(AuthInfo*) other {
  if (other == [AuthInfo defaultInstance]) {
    return self;
  }
  if (other.hasProvider) {
    [self setProvider:other.provider];
  }
  if (other.hasToken) {
    [self mergeToken:other.token];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AuthInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AuthInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setProvider:[input readString]];
        break;
      }
      case 18: {
        JWTBuilder* subBuilder = [JWT builder];
        if (self.hasToken) {
          [subBuilder mergeFrom:self.token];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setToken:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasProvider {
  return resultAuthInfo.hasProvider;
}
- (NSString*) provider {
  return resultAuthInfo.provider;
}
- (AuthInfoBuilder*) setProvider:(NSString*) value {
  resultAuthInfo.hasProvider = YES;
  resultAuthInfo.provider = value;
  return self;
}
- (AuthInfoBuilder*) clearProvider {
  resultAuthInfo.hasProvider = NO;
  resultAuthInfo.provider = @"";
  return self;
}
- (BOOL) hasToken {
  return resultAuthInfo.hasToken;
}
- (JWT*) token {
  return resultAuthInfo.token;
}
- (AuthInfoBuilder*) setToken:(JWT*) value {
  resultAuthInfo.hasToken = YES;
  resultAuthInfo.token = value;
  return self;
}
- (AuthInfoBuilder*) setTokenBuilder:(JWTBuilder*) builderForValue {
  return [self setToken:[builderForValue build]];
}
- (AuthInfoBuilder*) mergeToken:(JWT*) value {
  if (resultAuthInfo.hasToken &&
      resultAuthInfo.token != [JWT defaultInstance]) {
    resultAuthInfo.token =
      [[[JWT builderWithPrototype:resultAuthInfo.token] mergeFrom:value] buildPartial];
  } else {
    resultAuthInfo.token = value;
  }
  resultAuthInfo.hasToken = YES;
  return self;
}
- (AuthInfoBuilder*) clearToken {
  resultAuthInfo.hasToken = NO;
  resultAuthInfo.token = [JWT defaultInstance];
  return self;
}
@end

@interface JWT ()
@property (strong) NSString* contents;
@property SInt32 unknown2;
@end

@implementation JWT

- (BOOL) hasContents {
  return !!hasContents_;
}
- (void) setHasContents:(BOOL) _value_ {
  hasContents_ = !!_value_;
}
@synthesize contents;
- (BOOL) hasUnknown2 {
  return !!hasUnknown2_;
}
- (void) setHasUnknown2:(BOOL) _value_ {
  hasUnknown2_ = !!_value_;
}
@synthesize unknown2;
- (instancetype) init {
  if ((self = [super init])) {
    self.contents = @"";
    self.unknown2 = 0;
  }
  return self;
}
static JWT* defaultJWTInstance = nil;
+ (void) initialize {
  if (self == [JWT class]) {
    defaultJWTInstance = [[JWT alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultJWTInstance;
}
- (instancetype) defaultInstance {
  return defaultJWTInstance;
}
- (BOOL) isInitialized {
  if (!self.hasContents) {
    return NO;
  }
  if (!self.hasUnknown2) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasContents) {
    [output writeString:1 value:self.contents];
  }
  if (self.hasUnknown2) {
    [output writeInt32:2 value:self.unknown2];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasContents) {
    size_ += computeStringSize(1, self.contents);
  }
  if (self.hasUnknown2) {
    size_ += computeInt32Size(2, self.unknown2);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (JWT*) parseFromData:(NSData*) data {
  return (JWT*)[[[JWT builder] mergeFromData:data] build];
}
+ (JWT*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (JWT*)[[[JWT builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (JWT*) parseFromInputStream:(NSInputStream*) input {
  return (JWT*)[[[JWT builder] mergeFromInputStream:input] build];
}
+ (JWT*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (JWT*)[[[JWT builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (JWT*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (JWT*)[[[JWT builder] mergeFromCodedInputStream:input] build];
}
+ (JWT*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (JWT*)[[[JWT builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (JWTBuilder*) builder {
  return [[JWTBuilder alloc] init];
}
+ (JWTBuilder*) builderWithPrototype:(JWT*) prototype {
  return [[JWT builder] mergeFrom:prototype];
}
- (JWTBuilder*) builder {
  return [JWT builder];
}
- (JWTBuilder*) toBuilder {
  return [JWT builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasContents) {
    [output appendFormat:@"%@%@: %@\n", indent, @"contents", self.contents];
  }
  if (self.hasUnknown2) {
    [output appendFormat:@"%@%@: %@\n", indent, @"unknown2", [NSNumber numberWithInteger:self.unknown2]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasContents) {
    [dictionary setObject: self.contents forKey: @"contents"];
  }
  if (self.hasUnknown2) {
    [dictionary setObject: [NSNumber numberWithInteger:self.unknown2] forKey: @"unknown2"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[JWT class]]) {
    return NO;
  }
  JWT *otherMessage = other;
  return
      self.hasContents == otherMessage.hasContents &&
      (!self.hasContents || [self.contents isEqual:otherMessage.contents]) &&
      self.hasUnknown2 == otherMessage.hasUnknown2 &&
      (!self.hasUnknown2 || self.unknown2 == otherMessage.unknown2) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasContents) {
    hashCode = hashCode * 31 + [self.contents hash];
  }
  if (self.hasUnknown2) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.unknown2] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface JWTBuilder()
@property (strong) JWT* resultJwt;
@end

@implementation JWTBuilder
@synthesize resultJwt;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultJwt = [[JWT alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultJwt;
}
- (JWTBuilder*) clear {
  self.resultJwt = [[JWT alloc] init];
  return self;
}
- (JWTBuilder*) clone {
  return [JWT builderWithPrototype:resultJwt];
}
- (JWT*) defaultInstance {
  return [JWT defaultInstance];
}
- (JWT*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (JWT*) buildPartial {
  JWT* returnMe = resultJwt;
  self.resultJwt = nil;
  return returnMe;
}
- (JWTBuilder*) mergeFrom:(JWT*) other {
  if (other == [JWT defaultInstance]) {
    return self;
  }
  if (other.hasContents) {
    [self setContents:other.contents];
  }
  if (other.hasUnknown2) {
    [self setUnknown2:other.unknown2];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (JWTBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (JWTBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setContents:[input readString]];
        break;
      }
      case 16: {
        [self setUnknown2:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasContents {
  return resultJwt.hasContents;
}
- (NSString*) contents {
  return resultJwt.contents;
}
- (JWTBuilder*) setContents:(NSString*) value {
  resultJwt.hasContents = YES;
  resultJwt.contents = value;
  return self;
}
- (JWTBuilder*) clearContents {
  resultJwt.hasContents = NO;
  resultJwt.contents = @"";
  return self;
}
- (BOOL) hasUnknown2 {
  return resultJwt.hasUnknown2;
}
- (SInt32) unknown2 {
  return resultJwt.unknown2;
}
- (JWTBuilder*) setUnknown2:(SInt32) value {
  resultJwt.hasUnknown2 = YES;
  resultJwt.unknown2 = value;
  return self;
}
- (JWTBuilder*) clearUnknown2 {
  resultJwt.hasUnknown2 = NO;
  resultJwt.unknown2 = 0;
  return self;
}
@end

@interface AuthTicket ()
@property (strong) NSData* start;
@property UInt64 expireTimestampMs;
@property (strong) NSData* end;
@end

@implementation AuthTicket

- (BOOL) hasStart {
  return !!hasStart_;
}
- (void) setHasStart:(BOOL) _value_ {
  hasStart_ = !!_value_;
}
@synthesize start;
- (BOOL) hasExpireTimestampMs {
  return !!hasExpireTimestampMs_;
}
- (void) setHasExpireTimestampMs:(BOOL) _value_ {
  hasExpireTimestampMs_ = !!_value_;
}
@synthesize expireTimestampMs;
- (BOOL) hasEnd {
  return !!hasEnd_;
}
- (void) setHasEnd:(BOOL) _value_ {
  hasEnd_ = !!_value_;
}
@synthesize end;
- (instancetype) init {
  if ((self = [super init])) {
    self.start = [NSData data];
    self.expireTimestampMs = 0L;
    self.end = [NSData data];
  }
  return self;
}
static AuthTicket* defaultAuthTicketInstance = nil;
+ (void) initialize {
  if (self == [AuthTicket class]) {
    defaultAuthTicketInstance = [[AuthTicket alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultAuthTicketInstance;
}
- (instancetype) defaultInstance {
  return defaultAuthTicketInstance;
}
- (BOOL) isInitialized {
  if (!self.hasStart) {
    return NO;
  }
  if (!self.hasExpireTimestampMs) {
    return NO;
  }
  if (!self.hasEnd) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStart) {
    [output writeData:1 value:self.start];
  }
  if (self.hasExpireTimestampMs) {
    [output writeUInt64:2 value:self.expireTimestampMs];
  }
  if (self.hasEnd) {
    [output writeData:3 value:self.end];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasStart) {
    size_ += computeDataSize(1, self.start);
  }
  if (self.hasExpireTimestampMs) {
    size_ += computeUInt64Size(2, self.expireTimestampMs);
  }
  if (self.hasEnd) {
    size_ += computeDataSize(3, self.end);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AuthTicket*) parseFromData:(NSData*) data {
  return (AuthTicket*)[[[AuthTicket builder] mergeFromData:data] build];
}
+ (AuthTicket*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AuthTicket*)[[[AuthTicket builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AuthTicket*) parseFromInputStream:(NSInputStream*) input {
  return (AuthTicket*)[[[AuthTicket builder] mergeFromInputStream:input] build];
}
+ (AuthTicket*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AuthTicket*)[[[AuthTicket builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AuthTicket*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AuthTicket*)[[[AuthTicket builder] mergeFromCodedInputStream:input] build];
}
+ (AuthTicket*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AuthTicket*)[[[AuthTicket builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AuthTicketBuilder*) builder {
  return [[AuthTicketBuilder alloc] init];
}
+ (AuthTicketBuilder*) builderWithPrototype:(AuthTicket*) prototype {
  return [[AuthTicket builder] mergeFrom:prototype];
}
- (AuthTicketBuilder*) builder {
  return [AuthTicket builder];
}
- (AuthTicketBuilder*) toBuilder {
  return [AuthTicket builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasStart) {
    [output appendFormat:@"%@%@: %@\n", indent, @"start", self.start];
  }
  if (self.hasExpireTimestampMs) {
    [output appendFormat:@"%@%@: %@\n", indent, @"expireTimestampMs", [NSNumber numberWithLongLong:self.expireTimestampMs]];
  }
  if (self.hasEnd) {
    [output appendFormat:@"%@%@: %@\n", indent, @"end", self.end];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasStart) {
    [dictionary setObject: self.start forKey: @"start"];
  }
  if (self.hasExpireTimestampMs) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.expireTimestampMs] forKey: @"expireTimestampMs"];
  }
  if (self.hasEnd) {
    [dictionary setObject: self.end forKey: @"end"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[AuthTicket class]]) {
    return NO;
  }
  AuthTicket *otherMessage = other;
  return
      self.hasStart == otherMessage.hasStart &&
      (!self.hasStart || [self.start isEqual:otherMessage.start]) &&
      self.hasExpireTimestampMs == otherMessage.hasExpireTimestampMs &&
      (!self.hasExpireTimestampMs || self.expireTimestampMs == otherMessage.expireTimestampMs) &&
      self.hasEnd == otherMessage.hasEnd &&
      (!self.hasEnd || [self.end isEqual:otherMessage.end]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasStart) {
    hashCode = hashCode * 31 + [self.start hash];
  }
  if (self.hasExpireTimestampMs) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.expireTimestampMs] hash];
  }
  if (self.hasEnd) {
    hashCode = hashCode * 31 + [self.end hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface AuthTicketBuilder()
@property (strong) AuthTicket* resultAuthTicket;
@end

@implementation AuthTicketBuilder
@synthesize resultAuthTicket;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultAuthTicket = [[AuthTicket alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultAuthTicket;
}
- (AuthTicketBuilder*) clear {
  self.resultAuthTicket = [[AuthTicket alloc] init];
  return self;
}
- (AuthTicketBuilder*) clone {
  return [AuthTicket builderWithPrototype:resultAuthTicket];
}
- (AuthTicket*) defaultInstance {
  return [AuthTicket defaultInstance];
}
- (AuthTicket*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AuthTicket*) buildPartial {
  AuthTicket* returnMe = resultAuthTicket;
  self.resultAuthTicket = nil;
  return returnMe;
}
- (AuthTicketBuilder*) mergeFrom:(AuthTicket*) other {
  if (other == [AuthTicket defaultInstance]) {
    return self;
  }
  if (other.hasStart) {
    [self setStart:other.start];
  }
  if (other.hasExpireTimestampMs) {
    [self setExpireTimestampMs:other.expireTimestampMs];
  }
  if (other.hasEnd) {
    [self setEnd:other.end];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AuthTicketBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AuthTicketBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setStart:[input readData]];
        break;
      }
      case 16: {
        [self setExpireTimestampMs:[input readUInt64]];
        break;
      }
      case 26: {
        [self setEnd:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasStart {
  return resultAuthTicket.hasStart;
}
- (NSData*) start {
  return resultAuthTicket.start;
}
- (AuthTicketBuilder*) setStart:(NSData*) value {
  resultAuthTicket.hasStart = YES;
  resultAuthTicket.start = value;
  return self;
}
- (AuthTicketBuilder*) clearStart {
  resultAuthTicket.hasStart = NO;
  resultAuthTicket.start = [NSData data];
  return self;
}
- (BOOL) hasExpireTimestampMs {
  return resultAuthTicket.hasExpireTimestampMs;
}
- (UInt64) expireTimestampMs {
  return resultAuthTicket.expireTimestampMs;
}
- (AuthTicketBuilder*) setExpireTimestampMs:(UInt64) value {
  resultAuthTicket.hasExpireTimestampMs = YES;
  resultAuthTicket.expireTimestampMs = value;
  return self;
}
- (AuthTicketBuilder*) clearExpireTimestampMs {
  resultAuthTicket.hasExpireTimestampMs = NO;
  resultAuthTicket.expireTimestampMs = 0L;
  return self;
}
- (BOOL) hasEnd {
  return resultAuthTicket.hasEnd;
}
- (NSData*) end {
  return resultAuthTicket.end;
}
- (AuthTicketBuilder*) setEnd:(NSData*) value {
  resultAuthTicket.hasEnd = YES;
  resultAuthTicket.end = value;
  return self;
}
- (AuthTicketBuilder*) clearEnd {
  resultAuthTicket.hasEnd = NO;
  resultAuthTicket.end = [NSData data];
  return self;
}
@end

@interface RequestEnvelopeUnknown6 ()
@property SInt32 unknown1;
@property (strong) RequestEnvelopeUnknown6Unknown2* unknown2;
@end

@implementation RequestEnvelopeUnknown6

- (BOOL) hasUnknown1 {
  return !!hasUnknown1_;
}
- (void) setHasUnknown1:(BOOL) _value_ {
  hasUnknown1_ = !!_value_;
}
@synthesize unknown1;
- (BOOL) hasUnknown2 {
  return !!hasUnknown2_;
}
- (void) setHasUnknown2:(BOOL) _value_ {
  hasUnknown2_ = !!_value_;
}
@synthesize unknown2;
- (instancetype) init {
  if ((self = [super init])) {
    self.unknown1 = 0;
    self.unknown2 = [RequestEnvelopeUnknown6Unknown2 defaultInstance];
  }
  return self;
}
static RequestEnvelopeUnknown6* defaultRequestEnvelopeUnknown6Instance = nil;
+ (void) initialize {
  if (self == [RequestEnvelopeUnknown6 class]) {
    defaultRequestEnvelopeUnknown6Instance = [[RequestEnvelopeUnknown6 alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultRequestEnvelopeUnknown6Instance;
}
- (instancetype) defaultInstance {
  return defaultRequestEnvelopeUnknown6Instance;
}
- (BOOL) isInitialized {
  if (!self.hasUnknown1) {
    return NO;
  }
  if (!self.hasUnknown2) {
    return NO;
  }
  if (!self.unknown2.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUnknown1) {
    [output writeInt32:1 value:self.unknown1];
  }
  if (self.hasUnknown2) {
    [output writeMessage:2 value:self.unknown2];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUnknown1) {
    size_ += computeInt32Size(1, self.unknown1);
  }
  if (self.hasUnknown2) {
    size_ += computeMessageSize(2, self.unknown2);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RequestEnvelopeUnknown6*) parseFromData:(NSData*) data {
  return (RequestEnvelopeUnknown6*)[[[RequestEnvelopeUnknown6 builder] mergeFromData:data] build];
}
+ (RequestEnvelopeUnknown6*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestEnvelopeUnknown6*)[[[RequestEnvelopeUnknown6 builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RequestEnvelopeUnknown6*) parseFromInputStream:(NSInputStream*) input {
  return (RequestEnvelopeUnknown6*)[[[RequestEnvelopeUnknown6 builder] mergeFromInputStream:input] build];
}
+ (RequestEnvelopeUnknown6*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestEnvelopeUnknown6*)[[[RequestEnvelopeUnknown6 builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RequestEnvelopeUnknown6*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RequestEnvelopeUnknown6*)[[[RequestEnvelopeUnknown6 builder] mergeFromCodedInputStream:input] build];
}
+ (RequestEnvelopeUnknown6*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestEnvelopeUnknown6*)[[[RequestEnvelopeUnknown6 builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RequestEnvelopeUnknown6Builder*) builder {
  return [[RequestEnvelopeUnknown6Builder alloc] init];
}
+ (RequestEnvelopeUnknown6Builder*) builderWithPrototype:(RequestEnvelopeUnknown6*) prototype {
  return [[RequestEnvelopeUnknown6 builder] mergeFrom:prototype];
}
- (RequestEnvelopeUnknown6Builder*) builder {
  return [RequestEnvelopeUnknown6 builder];
}
- (RequestEnvelopeUnknown6Builder*) toBuilder {
  return [RequestEnvelopeUnknown6 builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUnknown1) {
    [output appendFormat:@"%@%@: %@\n", indent, @"unknown1", [NSNumber numberWithInteger:self.unknown1]];
  }
  if (self.hasUnknown2) {
    [output appendFormat:@"%@%@ {\n", indent, @"unknown2"];
    [self.unknown2 writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUnknown1) {
    [dictionary setObject: [NSNumber numberWithInteger:self.unknown1] forKey: @"unknown1"];
  }
  if (self.hasUnknown2) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.unknown2 storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"unknown2"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RequestEnvelopeUnknown6 class]]) {
    return NO;
  }
  RequestEnvelopeUnknown6 *otherMessage = other;
  return
      self.hasUnknown1 == otherMessage.hasUnknown1 &&
      (!self.hasUnknown1 || self.unknown1 == otherMessage.unknown1) &&
      self.hasUnknown2 == otherMessage.hasUnknown2 &&
      (!self.hasUnknown2 || [self.unknown2 isEqual:otherMessage.unknown2]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUnknown1) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.unknown1] hash];
  }
  if (self.hasUnknown2) {
    hashCode = hashCode * 31 + [self.unknown2 hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface RequestEnvelopeUnknown6Builder()
@property (strong) RequestEnvelopeUnknown6* resultRequestEnvelopeUnknown6;
@end

@implementation RequestEnvelopeUnknown6Builder
@synthesize resultRequestEnvelopeUnknown6;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultRequestEnvelopeUnknown6 = [[RequestEnvelopeUnknown6 alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultRequestEnvelopeUnknown6;
}
- (RequestEnvelopeUnknown6Builder*) clear {
  self.resultRequestEnvelopeUnknown6 = [[RequestEnvelopeUnknown6 alloc] init];
  return self;
}
- (RequestEnvelopeUnknown6Builder*) clone {
  return [RequestEnvelopeUnknown6 builderWithPrototype:resultRequestEnvelopeUnknown6];
}
- (RequestEnvelopeUnknown6*) defaultInstance {
  return [RequestEnvelopeUnknown6 defaultInstance];
}
- (RequestEnvelopeUnknown6*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RequestEnvelopeUnknown6*) buildPartial {
  RequestEnvelopeUnknown6* returnMe = resultRequestEnvelopeUnknown6;
  self.resultRequestEnvelopeUnknown6 = nil;
  return returnMe;
}
- (RequestEnvelopeUnknown6Builder*) mergeFrom:(RequestEnvelopeUnknown6*) other {
  if (other == [RequestEnvelopeUnknown6 defaultInstance]) {
    return self;
  }
  if (other.hasUnknown1) {
    [self setUnknown1:other.unknown1];
  }
  if (other.hasUnknown2) {
    [self mergeUnknown2:other.unknown2];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RequestEnvelopeUnknown6Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RequestEnvelopeUnknown6Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUnknown1:[input readInt32]];
        break;
      }
      case 18: {
        RequestEnvelopeUnknown6Unknown2Builder* subBuilder = [RequestEnvelopeUnknown6Unknown2 builder];
        if (self.hasUnknown2) {
          [subBuilder mergeFrom:self.unknown2];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUnknown2:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasUnknown1 {
  return resultRequestEnvelopeUnknown6.hasUnknown1;
}
- (SInt32) unknown1 {
  return resultRequestEnvelopeUnknown6.unknown1;
}
- (RequestEnvelopeUnknown6Builder*) setUnknown1:(SInt32) value {
  resultRequestEnvelopeUnknown6.hasUnknown1 = YES;
  resultRequestEnvelopeUnknown6.unknown1 = value;
  return self;
}
- (RequestEnvelopeUnknown6Builder*) clearUnknown1 {
  resultRequestEnvelopeUnknown6.hasUnknown1 = NO;
  resultRequestEnvelopeUnknown6.unknown1 = 0;
  return self;
}
- (BOOL) hasUnknown2 {
  return resultRequestEnvelopeUnknown6.hasUnknown2;
}
- (RequestEnvelopeUnknown6Unknown2*) unknown2 {
  return resultRequestEnvelopeUnknown6.unknown2;
}
- (RequestEnvelopeUnknown6Builder*) setUnknown2:(RequestEnvelopeUnknown6Unknown2*) value {
  resultRequestEnvelopeUnknown6.hasUnknown2 = YES;
  resultRequestEnvelopeUnknown6.unknown2 = value;
  return self;
}
- (RequestEnvelopeUnknown6Builder*) setUnknown2Builder:(RequestEnvelopeUnknown6Unknown2Builder*) builderForValue {
  return [self setUnknown2:[builderForValue build]];
}
- (RequestEnvelopeUnknown6Builder*) mergeUnknown2:(RequestEnvelopeUnknown6Unknown2*) value {
  if (resultRequestEnvelopeUnknown6.hasUnknown2 &&
      resultRequestEnvelopeUnknown6.unknown2 != [RequestEnvelopeUnknown6Unknown2 defaultInstance]) {
    resultRequestEnvelopeUnknown6.unknown2 =
      [[[RequestEnvelopeUnknown6Unknown2 builderWithPrototype:resultRequestEnvelopeUnknown6.unknown2] mergeFrom:value] buildPartial];
  } else {
    resultRequestEnvelopeUnknown6.unknown2 = value;
  }
  resultRequestEnvelopeUnknown6.hasUnknown2 = YES;
  return self;
}
- (RequestEnvelopeUnknown6Builder*) clearUnknown2 {
  resultRequestEnvelopeUnknown6.hasUnknown2 = NO;
  resultRequestEnvelopeUnknown6.unknown2 = [RequestEnvelopeUnknown6Unknown2 defaultInstance];
  return self;
}
@end

@interface RequestEnvelopeUnknown6Unknown2 ()
@property (strong) NSData* unknown1;
@end

@implementation RequestEnvelopeUnknown6Unknown2

- (BOOL) hasUnknown1 {
  return !!hasUnknown1_;
}
- (void) setHasUnknown1:(BOOL) _value_ {
  hasUnknown1_ = !!_value_;
}
@synthesize unknown1;
- (instancetype) init {
  if ((self = [super init])) {
    self.unknown1 = [NSData data];
  }
  return self;
}
static RequestEnvelopeUnknown6Unknown2* defaultRequestEnvelopeUnknown6Unknown2Instance = nil;
+ (void) initialize {
  if (self == [RequestEnvelopeUnknown6Unknown2 class]) {
    defaultRequestEnvelopeUnknown6Unknown2Instance = [[RequestEnvelopeUnknown6Unknown2 alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultRequestEnvelopeUnknown6Unknown2Instance;
}
- (instancetype) defaultInstance {
  return defaultRequestEnvelopeUnknown6Unknown2Instance;
}
- (BOOL) isInitialized {
  if (!self.hasUnknown1) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUnknown1) {
    [output writeData:1 value:self.unknown1];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUnknown1) {
    size_ += computeDataSize(1, self.unknown1);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RequestEnvelopeUnknown6Unknown2*) parseFromData:(NSData*) data {
  return (RequestEnvelopeUnknown6Unknown2*)[[[RequestEnvelopeUnknown6Unknown2 builder] mergeFromData:data] build];
}
+ (RequestEnvelopeUnknown6Unknown2*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestEnvelopeUnknown6Unknown2*)[[[RequestEnvelopeUnknown6Unknown2 builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RequestEnvelopeUnknown6Unknown2*) parseFromInputStream:(NSInputStream*) input {
  return (RequestEnvelopeUnknown6Unknown2*)[[[RequestEnvelopeUnknown6Unknown2 builder] mergeFromInputStream:input] build];
}
+ (RequestEnvelopeUnknown6Unknown2*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestEnvelopeUnknown6Unknown2*)[[[RequestEnvelopeUnknown6Unknown2 builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RequestEnvelopeUnknown6Unknown2*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RequestEnvelopeUnknown6Unknown2*)[[[RequestEnvelopeUnknown6Unknown2 builder] mergeFromCodedInputStream:input] build];
}
+ (RequestEnvelopeUnknown6Unknown2*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestEnvelopeUnknown6Unknown2*)[[[RequestEnvelopeUnknown6Unknown2 builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RequestEnvelopeUnknown6Unknown2Builder*) builder {
  return [[RequestEnvelopeUnknown6Unknown2Builder alloc] init];
}
+ (RequestEnvelopeUnknown6Unknown2Builder*) builderWithPrototype:(RequestEnvelopeUnknown6Unknown2*) prototype {
  return [[RequestEnvelopeUnknown6Unknown2 builder] mergeFrom:prototype];
}
- (RequestEnvelopeUnknown6Unknown2Builder*) builder {
  return [RequestEnvelopeUnknown6Unknown2 builder];
}
- (RequestEnvelopeUnknown6Unknown2Builder*) toBuilder {
  return [RequestEnvelopeUnknown6Unknown2 builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUnknown1) {
    [output appendFormat:@"%@%@: %@\n", indent, @"unknown1", self.unknown1];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUnknown1) {
    [dictionary setObject: self.unknown1 forKey: @"unknown1"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RequestEnvelopeUnknown6Unknown2 class]]) {
    return NO;
  }
  RequestEnvelopeUnknown6Unknown2 *otherMessage = other;
  return
      self.hasUnknown1 == otherMessage.hasUnknown1 &&
      (!self.hasUnknown1 || [self.unknown1 isEqual:otherMessage.unknown1]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUnknown1) {
    hashCode = hashCode * 31 + [self.unknown1 hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface RequestEnvelopeUnknown6Unknown2Builder()
@property (strong) RequestEnvelopeUnknown6Unknown2* resultRequestEnvelopeUnknown6Unknown2;
@end

@implementation RequestEnvelopeUnknown6Unknown2Builder
@synthesize resultRequestEnvelopeUnknown6Unknown2;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultRequestEnvelopeUnknown6Unknown2 = [[RequestEnvelopeUnknown6Unknown2 alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultRequestEnvelopeUnknown6Unknown2;
}
- (RequestEnvelopeUnknown6Unknown2Builder*) clear {
  self.resultRequestEnvelopeUnknown6Unknown2 = [[RequestEnvelopeUnknown6Unknown2 alloc] init];
  return self;
}
- (RequestEnvelopeUnknown6Unknown2Builder*) clone {
  return [RequestEnvelopeUnknown6Unknown2 builderWithPrototype:resultRequestEnvelopeUnknown6Unknown2];
}
- (RequestEnvelopeUnknown6Unknown2*) defaultInstance {
  return [RequestEnvelopeUnknown6Unknown2 defaultInstance];
}
- (RequestEnvelopeUnknown6Unknown2*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RequestEnvelopeUnknown6Unknown2*) buildPartial {
  RequestEnvelopeUnknown6Unknown2* returnMe = resultRequestEnvelopeUnknown6Unknown2;
  self.resultRequestEnvelopeUnknown6Unknown2 = nil;
  return returnMe;
}
- (RequestEnvelopeUnknown6Unknown2Builder*) mergeFrom:(RequestEnvelopeUnknown6Unknown2*) other {
  if (other == [RequestEnvelopeUnknown6Unknown2 defaultInstance]) {
    return self;
  }
  if (other.hasUnknown1) {
    [self setUnknown1:other.unknown1];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RequestEnvelopeUnknown6Unknown2Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RequestEnvelopeUnknown6Unknown2Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUnknown1:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasUnknown1 {
  return resultRequestEnvelopeUnknown6Unknown2.hasUnknown1;
}
- (NSData*) unknown1 {
  return resultRequestEnvelopeUnknown6Unknown2.unknown1;
}
- (RequestEnvelopeUnknown6Unknown2Builder*) setUnknown1:(NSData*) value {
  resultRequestEnvelopeUnknown6Unknown2.hasUnknown1 = YES;
  resultRequestEnvelopeUnknown6Unknown2.unknown1 = value;
  return self;
}
- (RequestEnvelopeUnknown6Unknown2Builder*) clearUnknown1 {
  resultRequestEnvelopeUnknown6Unknown2.hasUnknown1 = NO;
  resultRequestEnvelopeUnknown6Unknown2.unknown1 = [NSData data];
  return self;
}
@end

@interface GetMapObjectsMessage ()
@property (strong) PBAppendableArray * cellIdArray;
@property (strong) PBAppendableArray * sinceTimestampMsArray;
@property Float64 latitude;
@property Float64 longitude;
@end

@implementation GetMapObjectsMessage

@synthesize cellIdArray;
@dynamic cellId;
@synthesize sinceTimestampMsArray;
@dynamic sinceTimestampMs;
- (BOOL) hasLatitude {
  return !!hasLatitude_;
}
- (void) setHasLatitude:(BOOL) _value_ {
  hasLatitude_ = !!_value_;
}
@synthesize latitude;
- (BOOL) hasLongitude {
  return !!hasLongitude_;
}
- (void) setHasLongitude:(BOOL) _value_ {
  hasLongitude_ = !!_value_;
}
@synthesize longitude;
- (instancetype) init {
  if ((self = [super init])) {
    self.latitude = 0;
    self.longitude = 0;
  }
  return self;
}
static GetMapObjectsMessage* defaultGetMapObjectsMessageInstance = nil;
+ (void) initialize {
  if (self == [GetMapObjectsMessage class]) {
    defaultGetMapObjectsMessageInstance = [[GetMapObjectsMessage alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultGetMapObjectsMessageInstance;
}
- (instancetype) defaultInstance {
  return defaultGetMapObjectsMessageInstance;
}
- (PBArray *)cellId {
  return cellIdArray;
}
- (UInt64)cellIdAtIndex:(NSUInteger)index {
  return [cellIdArray uint64AtIndex:index];
}
- (PBArray *)sinceTimestampMs {
  return sinceTimestampMsArray;
}
- (SInt64)sinceTimestampMsAtIndex:(NSUInteger)index {
  return [sinceTimestampMsArray int64AtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasLatitude) {
    return NO;
  }
  if (!self.hasLongitude) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  const NSUInteger cellIdArrayCount = self.cellIdArray.count;
  if (cellIdArrayCount > 0) {
    const UInt64 *values = (const UInt64 *)self.cellIdArray.data;
    [output writeRawVarint32:10];
    [output writeRawVarint32:cellIdMemoizedSerializedSize];
    for (NSUInteger i = 0; i < cellIdArrayCount; ++i) {
      [output writeUInt64NoTag:values[i]];
    }
  }
  const NSUInteger sinceTimestampMsArrayCount = self.sinceTimestampMsArray.count;
  if (sinceTimestampMsArrayCount > 0) {
    const SInt64 *values = (const SInt64 *)self.sinceTimestampMsArray.data;
    [output writeRawVarint32:18];
    [output writeRawVarint32:sinceTimestampMsMemoizedSerializedSize];
    for (NSUInteger i = 0; i < sinceTimestampMsArrayCount; ++i) {
      [output writeInt64NoTag:values[i]];
    }
  }
  if (self.hasLatitude) {
    [output writeDouble:3 value:self.latitude];
  }
  if (self.hasLongitude) {
    [output writeDouble:4 value:self.longitude];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.cellIdArray.count;
    const UInt64 *values = (const UInt64 *)self.cellIdArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeUInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    if (count > 0) {
      size_ += 1;
      size_ += computeInt32SizeNoTag(dataSize);
    }
    cellIdMemoizedSerializedSize = dataSize;
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.sinceTimestampMsArray.count;
    const SInt64 *values = (const SInt64 *)self.sinceTimestampMsArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    if (count > 0) {
      size_ += 1;
      size_ += computeInt32SizeNoTag(dataSize);
    }
    sinceTimestampMsMemoizedSerializedSize = dataSize;
  }
  if (self.hasLatitude) {
    size_ += computeDoubleSize(3, self.latitude);
  }
  if (self.hasLongitude) {
    size_ += computeDoubleSize(4, self.longitude);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GetMapObjectsMessage*) parseFromData:(NSData*) data {
  return (GetMapObjectsMessage*)[[[GetMapObjectsMessage builder] mergeFromData:data] build];
}
+ (GetMapObjectsMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetMapObjectsMessage*)[[[GetMapObjectsMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetMapObjectsMessage*) parseFromInputStream:(NSInputStream*) input {
  return (GetMapObjectsMessage*)[[[GetMapObjectsMessage builder] mergeFromInputStream:input] build];
}
+ (GetMapObjectsMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetMapObjectsMessage*)[[[GetMapObjectsMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetMapObjectsMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetMapObjectsMessage*)[[[GetMapObjectsMessage builder] mergeFromCodedInputStream:input] build];
}
+ (GetMapObjectsMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetMapObjectsMessage*)[[[GetMapObjectsMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetMapObjectsMessageBuilder*) builder {
  return [[GetMapObjectsMessageBuilder alloc] init];
}
+ (GetMapObjectsMessageBuilder*) builderWithPrototype:(GetMapObjectsMessage*) prototype {
  return [[GetMapObjectsMessage builder] mergeFrom:prototype];
}
- (GetMapObjectsMessageBuilder*) builder {
  return [GetMapObjectsMessage builder];
}
- (GetMapObjectsMessageBuilder*) toBuilder {
  return [GetMapObjectsMessage builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.cellIdArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cellId", obj];
  }];
  [self.sinceTimestampMsArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sinceTimestampMs", obj];
  }];
  if (self.hasLatitude) {
    [output appendFormat:@"%@%@: %@\n", indent, @"latitude", [NSNumber numberWithDouble:self.latitude]];
  }
  if (self.hasLongitude) {
    [output appendFormat:@"%@%@: %@\n", indent, @"longitude", [NSNumber numberWithDouble:self.longitude]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  NSMutableArray * cellIdArrayArray = [NSMutableArray new];
  NSUInteger cellIdArrayCount=self.cellIdArray.count;
  for(int i=0;i<cellIdArrayCount;i++){
    [cellIdArrayArray addObject: @([self.cellIdArray uint64AtIndex:i])];
  }
  [dictionary setObject: cellIdArrayArray forKey: @"cellId"];
  NSMutableArray * sinceTimestampMsArrayArray = [NSMutableArray new];
  NSUInteger sinceTimestampMsArrayCount=self.sinceTimestampMsArray.count;
  for(int i=0;i<sinceTimestampMsArrayCount;i++){
    [sinceTimestampMsArrayArray addObject: @([self.sinceTimestampMsArray int64AtIndex:i])];
  }
  [dictionary setObject: sinceTimestampMsArrayArray forKey: @"sinceTimestampMs"];
  if (self.hasLatitude) {
    [dictionary setObject: [NSNumber numberWithDouble:self.latitude] forKey: @"latitude"];
  }
  if (self.hasLongitude) {
    [dictionary setObject: [NSNumber numberWithDouble:self.longitude] forKey: @"longitude"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GetMapObjectsMessage class]]) {
    return NO;
  }
  GetMapObjectsMessage *otherMessage = other;
  return
      [self.cellIdArray isEqualToArray:otherMessage.cellIdArray] &&
      [self.sinceTimestampMsArray isEqualToArray:otherMessage.sinceTimestampMsArray] &&
      self.hasLatitude == otherMessage.hasLatitude &&
      (!self.hasLatitude || self.latitude == otherMessage.latitude) &&
      self.hasLongitude == otherMessage.hasLongitude &&
      (!self.hasLongitude || self.longitude == otherMessage.longitude) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.cellIdArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  [self.sinceTimestampMsArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  if (self.hasLatitude) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.latitude] hash];
  }
  if (self.hasLongitude) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.longitude] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GetMapObjectsMessageBuilder()
@property (strong) GetMapObjectsMessage* resultGetMapObjectsMessage;
@end

@implementation GetMapObjectsMessageBuilder
@synthesize resultGetMapObjectsMessage;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultGetMapObjectsMessage = [[GetMapObjectsMessage alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultGetMapObjectsMessage;
}
- (GetMapObjectsMessageBuilder*) clear {
  self.resultGetMapObjectsMessage = [[GetMapObjectsMessage alloc] init];
  return self;
}
- (GetMapObjectsMessageBuilder*) clone {
  return [GetMapObjectsMessage builderWithPrototype:resultGetMapObjectsMessage];
}
- (GetMapObjectsMessage*) defaultInstance {
  return [GetMapObjectsMessage defaultInstance];
}
- (GetMapObjectsMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetMapObjectsMessage*) buildPartial {
  GetMapObjectsMessage* returnMe = resultGetMapObjectsMessage;
  self.resultGetMapObjectsMessage = nil;
  return returnMe;
}
- (GetMapObjectsMessageBuilder*) mergeFrom:(GetMapObjectsMessage*) other {
  if (other == [GetMapObjectsMessage defaultInstance]) {
    return self;
  }
  if (other.cellIdArray.count > 0) {
    if (resultGetMapObjectsMessage.cellIdArray == nil) {
      resultGetMapObjectsMessage.cellIdArray = [other.cellIdArray copy];
    } else {
      [resultGetMapObjectsMessage.cellIdArray appendArray:other.cellIdArray];
    }
  }
  if (other.sinceTimestampMsArray.count > 0) {
    if (resultGetMapObjectsMessage.sinceTimestampMsArray == nil) {
      resultGetMapObjectsMessage.sinceTimestampMsArray = [other.sinceTimestampMsArray copy];
    } else {
      [resultGetMapObjectsMessage.sinceTimestampMsArray appendArray:other.sinceTimestampMsArray];
    }
  }
  if (other.hasLatitude) {
    [self setLatitude:other.latitude];
  }
  if (other.hasLongitude) {
    [self setLongitude:other.longitude];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetMapObjectsMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetMapObjectsMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        SInt32 length = [input readRawVarint32];
        SInt32 limit = [input pushLimit:length];
        if (resultGetMapObjectsMessage.cellIdArray == nil) {
          resultGetMapObjectsMessage.cellIdArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeUInt64];
        }
        while (input.bytesUntilLimit > 0) {
          [resultGetMapObjectsMessage.cellIdArray addUint64:[input readUInt64]];
        }
        [input popLimit:limit];
        break;
      }
      case 18: {
        SInt32 length = [input readRawVarint32];
        SInt32 limit = [input pushLimit:length];
        if (resultGetMapObjectsMessage.sinceTimestampMsArray == nil) {
          resultGetMapObjectsMessage.sinceTimestampMsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
        }
        while (input.bytesUntilLimit > 0) {
          [resultGetMapObjectsMessage.sinceTimestampMsArray addInt64:[input readInt64]];
        }
        [input popLimit:limit];
        break;
      }
      case 25: {
        [self setLatitude:[input readDouble]];
        break;
      }
      case 33: {
        [self setLongitude:[input readDouble]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)cellId {
  return resultGetMapObjectsMessage.cellIdArray;
}
- (UInt64)cellIdAtIndex:(NSUInteger)index {
  return [resultGetMapObjectsMessage cellIdAtIndex:index];
}
- (GetMapObjectsMessageBuilder *)addCellId:(UInt64)value {
  if (resultGetMapObjectsMessage.cellIdArray == nil) {
    resultGetMapObjectsMessage.cellIdArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeUInt64];
  }
  [resultGetMapObjectsMessage.cellIdArray addUint64:value];
  return self;
}
- (GetMapObjectsMessageBuilder *)setCellIdArray:(NSArray *)array {
  resultGetMapObjectsMessage.cellIdArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeUInt64];
  return self;
}
- (GetMapObjectsMessageBuilder *)setCellIdValues:(const UInt64 *)values count:(NSUInteger)count {
  resultGetMapObjectsMessage.cellIdArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeUInt64];
  return self;
}
- (GetMapObjectsMessageBuilder *)clearCellId {
  resultGetMapObjectsMessage.cellIdArray = nil;
  return self;
}
- (PBAppendableArray *)sinceTimestampMs {
  return resultGetMapObjectsMessage.sinceTimestampMsArray;
}
- (SInt64)sinceTimestampMsAtIndex:(NSUInteger)index {
  return [resultGetMapObjectsMessage sinceTimestampMsAtIndex:index];
}
- (GetMapObjectsMessageBuilder *)addSinceTimestampMs:(SInt64)value {
  if (resultGetMapObjectsMessage.sinceTimestampMsArray == nil) {
    resultGetMapObjectsMessage.sinceTimestampMsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
  }
  [resultGetMapObjectsMessage.sinceTimestampMsArray addInt64:value];
  return self;
}
- (GetMapObjectsMessageBuilder *)setSinceTimestampMsArray:(NSArray *)array {
  resultGetMapObjectsMessage.sinceTimestampMsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt64];
  return self;
}
- (GetMapObjectsMessageBuilder *)setSinceTimestampMsValues:(const SInt64 *)values count:(NSUInteger)count {
  resultGetMapObjectsMessage.sinceTimestampMsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt64];
  return self;
}
- (GetMapObjectsMessageBuilder *)clearSinceTimestampMs {
  resultGetMapObjectsMessage.sinceTimestampMsArray = nil;
  return self;
}
- (BOOL) hasLatitude {
  return resultGetMapObjectsMessage.hasLatitude;
}
- (Float64) latitude {
  return resultGetMapObjectsMessage.latitude;
}
- (GetMapObjectsMessageBuilder*) setLatitude:(Float64) value {
  resultGetMapObjectsMessage.hasLatitude = YES;
  resultGetMapObjectsMessage.latitude = value;
  return self;
}
- (GetMapObjectsMessageBuilder*) clearLatitude {
  resultGetMapObjectsMessage.hasLatitude = NO;
  resultGetMapObjectsMessage.latitude = 0;
  return self;
}
- (BOOL) hasLongitude {
  return resultGetMapObjectsMessage.hasLongitude;
}
- (Float64) longitude {
  return resultGetMapObjectsMessage.longitude;
}
- (GetMapObjectsMessageBuilder*) setLongitude:(Float64) value {
  resultGetMapObjectsMessage.hasLongitude = YES;
  resultGetMapObjectsMessage.longitude = value;
  return self;
}
- (GetMapObjectsMessageBuilder*) clearLongitude {
  resultGetMapObjectsMessage.hasLongitude = NO;
  resultGetMapObjectsMessage.longitude = 0;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
